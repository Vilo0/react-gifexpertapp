{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","props","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","setCategories","cats","type","value","onChange","target","console","log","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAEC,GAAY,IAAD,EAEAC,mBAAS,IAFT,mBAE7BC,EAF6B,KAEjBC,EAFiB,KAmBpC,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,EAAMS,eAAe,SAAAC,GAAI,OAAKR,GAAL,mBAAoBQ,OAC7CP,EAAc,MAMlB,SACI,uBACIQ,KAAK,OACLC,MAAQV,EACRW,SApBc,SAAER,GACxBF,EAAeE,EAAES,OAAOF,OACxBG,QAAQC,IAAIX,EAAES,OAAOF,a,+BCPhBK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAIFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAA0B,IAAvBJ,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAItC,OAFAL,QAAQC,IAAIa,EAAIC,EAAOV,GAGnB,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,4BAAKA,QCJJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAwBxC,OAjBAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAICH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAM1B,CAACpB,IAEGqB,EDlB0BK,CAAa1B,GAAtCoB,EAJ6B,EAI7BA,QAAcP,EAJe,EAIpBN,KAWjB,OACI,qCACI,oBAAIS,UAAU,oCAAd,SAAoDhB,IAElDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAIQH,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAEKA,GADCA,EAAIC,aE5BrBgB,EAAe,WAAQ,IAAD,EAEK5C,mBAAS,CAAC,cAFf,mBAExB6C,EAFwB,KAEZrC,EAFY,KAU/B,OACI,qCACI,6CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAGA,6BAEQqC,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,YCnBlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.0fd1968d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ( props ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n        console.log(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( inputValue.trim().length > 2 ){\n            props.setCategories( cats => [inputValue, ...cats] );\n            setInputValue('');\n        }\n        \n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=20&api_key=ebpWKs8Z1UiwBASWKha0WyGESU2ilyk5`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    // console.log(data);\n\n    const gifs = data.map( img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n\n    console.log(id, title, url)\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n// import { getGifs } from '../helpers/getGifs';\n\nexport const GifGrid = ({ category }) => {\n\n    // const [images, setImages] = useState([]);\n\n    const { loading, data:images } = useFetchGifs(category);\n\n    // useEffect( () => {\n    //     getGifs(category)\n    //         .then( setImages );\n    // }, [ category ])\n\n    \n\n    // getGifs();\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{ category }</h3>\n\n            { loading && <p className='animate__animated animate__flash'>Loading</p> }\n            \n            <div className=\"card-grid\">\n                \n\n                {\n                    images.map( ( img ) => (\n                        <GifGridItem \n                        key={ img.id }\n                        { ...img }/>\n                    ))\n                }\n\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n\n                // setTimeout(() => {\n\n                    setState({\n                        data:imgs,\n                        loading: false\n                    });\n                    \n                // }, 2000);\n            });\n\n    }, [category])\n\n    return state; // { data: [], loading: true }\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport {GifGrid} from './components/GifGrid';\n\nexport const GifExpertApp = ( ) => {\n\n    const [categories, setCategories] = useState(['One Piece']);\n\n    // const handleAdd = () => {  \n    //     //setCategories( [...categories, 'Torre de Dios'] );\n    //     setCategories( cats => [...cats, 'Torre de Dios'] ); \n    // }\n\n\n    return (\n        <>\n            <h2>GiExpertApp</h2>\n\n            <AddCategory setCategories={ setCategories } />\n\n            <hr />\n            \n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid  \n                            key={ category }\n                            category={ category }\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}